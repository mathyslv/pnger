name: Deployment

on:
  push:
    branches: [ main ]

jobs:
  release-plz:
    name: release-plz
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Keep this - needed for full git history
          token: ${{ secrets.GITHUB_TOKEN }}  # Explicit token

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # Add caching for better performance
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-
            ${{ runner.os }}-cargo-

      # Ensure git is properly configured before release-plz runs
      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Check if we actually need to run release-plz
      - name: Check for changes since last release
        id: check-changes
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Check if there are commits since the last tag
          COMMITS_SINCE_TAG=$(git rev-list ${LATEST_TAG}..HEAD --count)
          echo "Commits since last tag: $COMMITS_SINCE_TAG"
          
          if [ "$COMMITS_SINCE_TAG" -eq "0" ]; then
            echo "No commits since last release, skipping release-plz"
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

      - name: Run release-plz
        if: steps.check-changes.outputs.should_run == 'true'
        uses: MarcoIeni/release-plz-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      # Add error handling and reporting
      - name: Report release-plz failure
        if: failure() && steps.check-changes.outputs.should_run == 'true'
        run: |
          echo "::error::release-plz failed. This could be due to:"
          echo "::error::1. Missing CARGO_REGISTRY_TOKEN secret"
          echo "::error::2. Insufficient GitHub token permissions"
          echo "::error::3. Git configuration issues"
          echo "::error::4. Cargo.toml version conflicts"
